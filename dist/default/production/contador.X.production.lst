

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 05 12:05:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4520 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataBANK0
    58  00011A                     __pidataBANK0:
    59                           	callstack 0
    60                           
    61                           ;initializer for _display_7_seg
    62  00011A  3F                 	db	63
    63  00011B  06                 	db	6
    64  00011C  5B                 	db	91
    65  00011D  4F                 	db	79
    66  00011E  66                 	db	102
    67  00011F  6D                 	db	109
    68  000120  7D                 	db	125
    69  000121  07                 	db	7
    70  000122  7F                 	db	127
    71  000123  6F                 	db	111
    72  000124  00                 	db	0
    73                           
    74                           ;initializer for _timerConfig
    75  000125  00                 	db	0
    76  000126  00                 	db	0
    77  000127  00                 	db	0
    78  000128  00                 	db	0
    79  000129  07                 	db	7
    80  0000                     _TMR0	set	4054
    81  0000                     _INTCON2bits	set	4081
    82  0000                     _T0CONbits	set	4053
    83  0000                     _RCONbits	set	4048
    84  0000                     _TRISB	set	3987
    85  0000                     _PORTB	set	3969
    86  0000                     _LATB	set	3978
    87  0000                     _INTCONbits	set	4082
    88                           
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92  0000B4                     __pcinit:
    93                           	callstack 0
    94  0000B4                     start_initialization:
    95                           	callstack 0
    96  0000B4                     __initialization:
    97                           	callstack 0
    98                           
    99                           ; Initialize objects allocated to BANK0 (16 bytes)
   100                           ; load TBLPTR registers with __pidataBANK0
   101  0000B4  0E1A               	movlw	low __pidataBANK0
   102  0000B6  6EF6               	movwf	tblptrl,c
   103  0000B8  0E01               	movlw	high __pidataBANK0
   104  0000BA  6EF7               	movwf	tblptrh,c
   105  0000BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   106  0000BE  6EF8               	movwf	tblptru,c
   107  0000C0  EE00  F080         	lfsr	0,__pdataBANK0
   108  0000C4  EE10 F010          	lfsr	1,16
   109  0000C8                     copy_data0:
   110  0000C8  0009               	tblrd		*+
   111  0000CA  CFF5 FFEE          	movff	tablat,postinc0
   112  0000CE  50E5               	movf	postdec1,w,c
   113  0000D0  50E1               	movf	fsr1l,w,c
   114  0000D2  E1FA               	bnz	copy_data0
   115                           
   116                           ; Clear objects allocated to BANK0 (1 bytes)
   117  0000D4  0100               	movlb	0
   118  0000D6  6B93               	clrf	__pbssBANK0& (0+255),b
   119  0000D8                     end_of_initialization:
   120                           	callstack 0
   121  0000D8                     __end_of__initialization:
   122                           	callstack 0
   123  0000D8  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   124  0000DA  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   125  0000DC  0100               	movlb	0
   126  0000DE  EF71  F000         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	bssBANK0
   129  000093                     __pbssBANK0:
   130                           	callstack 0
   131  000093                     	ds	1
   132                           
   133                           	psect	dataBANK0
   134  000080                     __pdataBANK0:
   135                           	callstack 0
   136  000080                     _display_7_seg:
   137                           	callstack 0
   138  000080                     	ds	11
   139  00008B                     _timerConfig:
   140                           	callstack 0
   141  00008B                     	ds	5
   142                           
   143                           	psect	cstackBANK0
   144  000090                     __pcstackBANK0:
   145                           	callstack 0
   146  000090                     Timer0_Config@timerConfig:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x0
   150  000090                     	ds	2
   151  000092                     ??_Timer0_Config:
   152                           
   153                           ; 1 bytes @ 0x2
   154  000092                     	ds	1
   155  000093                     
   156                           ; 1 bytes @ 0x3
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 51 in file "src/main.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   176 ;;      Params:         0       0       0       0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0
   178 ;;      Temps:          0       0       0       0       0       0       0
   179 ;;      Totals:         0       0       0       0       0       0       0
   180 ;;Total ram usage:        0 bytes
   181 ;; Hardware stack levels required when called: 2
   182 ;; This function calls:
   183 ;;		_Display_Config
   184 ;;		_Interrupt_GlobalEnable
   185 ;;		_Timer0_Config
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  0000E2                     __ptext0:
   193                           	callstack 0
   194  0000E2                     _main:
   195                           	callstack 29
   196                           
   197                           ;incstack = 0
   198  0000E2  5093               	movf	147,w,c	;volatile
   199  0000E4  0BFE               	andlw	254
   200  0000E6  6E93               	movwf	147,c	;volatile
   201                           
   202                           ;src/main.c: 55:     Display_Config();
   203  0000E8  EC99  F000         	call	_Display_Config	;wreg free
   204                           
   205                           ;src/main.c: 56:     Interrupt_GlobalEnable();
   206  0000EC  EC95  F000         	call	_Interrupt_GlobalEnable	;wreg free
   207                           
   208                           ;src/main.c: 57:     Timer0_Config(&timerConfig);
   209  0000F0  0E8B               	movlw	low _timerConfig
   210  0000F2  0100               	movlb	0	; force () banked
   211  0000F4  6F90               	movwf	Timer0_Config@timerConfig& (0+255),b
   212  0000F6  0E00               	movlw	high _timerConfig
   213  0000F8  6F91               	movwf	(Timer0_Config@timerConfig+1)& (0+255),b
   214  0000FA  EC09  F000         	call	_Timer0_Config	;wreg free
   215  0000FE                     l35:
   216                           
   217                           ;src/main.c: 62:     }
   218  0000FE  D7FF               	goto	l35
   219  000100                     __end_of_main:
   220                           	callstack 0
   221                           
   222 ;; *************** function _Timer0_Config *****************
   223 ;; Defined at:
   224 ;;		line 4 in file "src/pic18f4520/timer/timer.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;  timerConfig     2    0[BANK0 ] PTR struct .
   227 ;;		 -> timerConfig(5), 
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   239 ;;      Params:         0       2       0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0
   241 ;;      Temps:          0       1       0       0       0       0       0
   242 ;;      Totals:         0       3       0       0       0       0       0
   243 ;;Total ram usage:        3 bytes
   244 ;; Hardware stack levels used: 1
   245 ;; Hardware stack levels required when called: 1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text1
   254  000012                     __ptext1:
   255                           	callstack 0
   256  000012                     _Timer0_Config:
   257                           	callstack 29
   258                           
   259                           ;src/pic18f4520/timer/timer.c: 4: void Timer0_Config( timer_config_t* timerConfig );src/
      +                          pic18f4520/timer/timer.c: 5: {;src/pic18f4520/timer/timer.c: 11:     T0CONbits.TMR0ON = 
      +                          0x00;
   260                           
   261                           ;incstack = 0
   262  000012  9ED5               	bcf	213,7,c	;volatile
   263                           
   264                           ;src/pic18f4520/timer/timer.c: 19:     T0CONbits.T08BIT = timerConfig->timer_length;
   265  000014  C090  FFD9         	movff	Timer0_Config@timerConfig,fsr2l
   266  000018  C091  FFDA         	movff	Timer0_Config@timerConfig+1,fsr2h
   267  00001C  50DF               	movf	indf2,w,c
   268  00001E  0100               	movlb	0	; force () banked
   269  000020  6F92               	movwf	??_Timer0_Config& (0+255),b
   270  000022  3B92               	swapf	??_Timer0_Config& (0+255),f,b
   271  000024  4792               	rlncf	??_Timer0_Config& (0+255),f,b
   272  000026  4792               	rlncf	??_Timer0_Config& (0+255),f,b
   273  000028  50D5               	movf	213,w,c	;volatile
   274  00002A  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   275  00002C  0BBF               	andlw	-65
   276  00002E  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   277  000030  6ED5               	movwf	213,c	;volatile
   278                           
   279                           ;src/pic18f4520/timer/timer.c: 26:     T0CONbits.T0CS = timerConfig->timer_clk_src;
   280  000032  0100               	movlb	0	; force () banked
   281  000034  EE20 F001          	lfsr	2,1
   282  000038  5190               	movf	Timer0_Config@timerConfig& (0+255),w,b
   283  00003A  26D9               	addwf	fsr2l,f,c
   284  00003C  5191               	movf	(Timer0_Config@timerConfig+1)& (0+255),w,b
   285  00003E  22DA               	addwfc	fsr2h,f,c
   286  000040  50DF               	movf	indf2,w,c
   287  000042  0100               	movlb	0	; force () banked
   288  000044  6F92               	movwf	??_Timer0_Config& (0+255),b
   289  000046  3B92               	swapf	??_Timer0_Config& (0+255),f,b
   290  000048  4792               	rlncf	??_Timer0_Config& (0+255),f,b
   291  00004A  50D5               	movf	213,w,c	;volatile
   292  00004C  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   293  00004E  0BDF               	andlw	-33
   294  000050  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   295  000052  6ED5               	movwf	213,c	;volatile
   296                           
   297                           ;src/pic18f4520/timer/timer.c: 34:     if(!(T0CONbits.PSA = timerConfig->timer_prescaler
      +                          _assign))
   298  000054  0100               	movlb	0	; force () banked
   299  000056  EE20 F003          	lfsr	2,3
   300  00005A  5190               	movf	Timer0_Config@timerConfig& (0+255),w,b
   301  00005C  26D9               	addwf	fsr2l,f,c
   302  00005E  5191               	movf	(Timer0_Config@timerConfig+1)& (0+255),w,b
   303  000060  22DA               	addwfc	fsr2h,f,c
   304  000062  50DF               	movf	indf2,w,c
   305  000064  0100               	movlb	0	; force () banked
   306  000066  6F92               	movwf	??_Timer0_Config& (0+255),b
   307  000068  4792               	rlncf	??_Timer0_Config& (0+255),f,b
   308  00006A  4792               	rlncf	??_Timer0_Config& (0+255),f,b
   309  00006C  4792               	rlncf	??_Timer0_Config& (0+255),f,b
   310  00006E  50D5               	movf	213,w,c	;volatile
   311  000070  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   312  000072  0BF7               	andlw	-9
   313  000074  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   314  000076  6ED5               	movwf	213,c	;volatile
   315  000078  30D5               	rrcf	213,w,c	;volatile
   316  00007A  32E8               	rrcf	wreg,f,c
   317  00007C  32E8               	rrcf	wreg,f,c
   318  00007E  0B01               	andlw	1
   319  000080  0900               	iorlw	0
   320  000082  A4D8               	btfss	status,2,c
   321  000084  D00F               	goto	l795
   322                           
   323                           ; BSR set to: 0
   324                           ;src/pic18f4520/timer/timer.c: 35:     {;src/pic18f4520/timer/timer.c: 45:         T0CON
      +                          bits.T0PS = timerConfig->timer_prescaler_value;
   325  000086  0100               	movlb	0	; force () banked
   326  000088  EE20 F004          	lfsr	2,4
   327  00008C  5190               	movf	Timer0_Config@timerConfig& (0+255),w,b
   328  00008E  26D9               	addwf	fsr2l,f,c
   329  000090  5191               	movf	(Timer0_Config@timerConfig+1)& (0+255),w,b
   330  000092  22DA               	addwfc	fsr2h,f,c
   331  000094  50DF               	movf	indf2,w,c
   332  000096  0100               	movlb	0	; force () banked
   333  000098  6F92               	movwf	??_Timer0_Config& (0+255),b
   334  00009A  50D5               	movf	213,w,c	;volatile
   335  00009C  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   336  00009E  0BF8               	andlw	-8
   337  0000A0  1992               	xorwf	??_Timer0_Config& (0+255),w,b
   338  0000A2  6ED5               	movwf	213,c	;volatile
   339  0000A4                     l795:
   340                           
   341                           ; BSR set to: 0
   342                           ;src/pic18f4520/timer/timer.c: 60:     INTCONbits.TMR0IE = 0x01;
   343  0000A4  8AF2               	bsf	242,5,c	;volatile
   344                           
   345                           ; BSR set to: 0
   346                           ;src/pic18f4520/timer/timer.c: 66:     INTCON2bits.TMR0IP = 0x01;
   347  0000A6  84F1               	bsf	241,2,c	;volatile
   348                           
   349                           ; BSR set to: 0
   350                           ;src/pic18f4520/timer/timer.c: 69:     TMR0 = 0xD9D9;
   351  0000A8  0ED9               	movlw	217
   352  0000AA  6ED7               	movwf	215,c	;volatile
   353  0000AC  0ED9               	movlw	217
   354  0000AE  6ED6               	movwf	214,c	;volatile
   355                           
   356                           ; BSR set to: 0
   357                           ;src/pic18f4520/timer/timer.c: 71:     T0CONbits.TMR0ON = 0x01;
   358  0000B0  8ED5               	bsf	213,7,c	;volatile
   359                           
   360                           ; BSR set to: 0
   361  0000B2  0012               	return		;funcret
   362  0000B4                     __end_of_Timer0_Config:
   363                           	callstack 0
   364                           
   365 ;; *************** function _Interrupt_GlobalEnable *****************
   366 ;; Defined at:
   367 ;;		line 4 in file "src/pic18f4520/interrupt/interrupt.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		None
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   381 ;;      Params:         0       0       0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; Hardware stack levels required when called: 1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text2
   396  00012A                     __ptext2:
   397                           	callstack 0
   398  00012A                     _Interrupt_GlobalEnable:
   399                           	callstack 29
   400                           
   401                           ;src/pic18f4520/interrupt/interrupt.c: 11:     RCONbits.IPEN = 0x01;
   402                           
   403                           ; BSR set to: 0
   404                           ;incstack = 0
   405  00012A  8ED0               	bsf	208,7,c	;volatile
   406                           
   407                           ;src/pic18f4520/interrupt/interrupt.c: 22:     INTCONbits.GIE_GIEH = 0x01;
   408  00012C  8EF2               	bsf	242,7,c	;volatile
   409                           
   410                           ;src/pic18f4520/interrupt/interrupt.c: 33:     INTCONbits.PEIE_GIEL = 0x01;
   411  00012E  8CF2               	bsf	242,6,c	;volatile
   412  000130  0012               	return		;funcret
   413  000132                     __end_of_Interrupt_GlobalEnable:
   414                           	callstack 0
   415                           
   416 ;; *************** function _Display_Config *****************
   417 ;; Defined at:
   418 ;;		line 5 in file "src/board/display_7_seg/display_7_seg_map.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         0       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0       0       0
   435 ;;      Totals:         0       0       0       0       0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used: 1
   438 ;; Hardware stack levels required when called: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text3
   447  000132                     __ptext3:
   448                           	callstack 0
   449  000132                     _Display_Config:
   450                           	callstack 29
   451                           
   452                           ;src/board/display_7_seg/display_7_seg_map.c: 7:     TRISB = 0x00000000;
   453                           
   454                           ;incstack = 0
   455  000132  0E00               	movlw	0
   456  000134  6E93               	movwf	147,c	;volatile
   457  000136  0012               	return		;funcret
   458  000138                     __end_of_Display_Config:
   459                           	callstack 0
   460                           
   461 ;; *************** function _TC0INT *****************
   462 ;; Defined at:
   463 ;;		line 39 in file "src/main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		Interrupt level 2
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	intcode
   491  000008                     __pintcode:
   492                           	callstack 0
   493  000008                     _TC0INT:
   494                           	callstack 29
   495                           
   496                           ;incstack = 0
   497  000008  8201               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   498  00000A  ED80  F000         	call	int_func,f	;refresh shadow registers
   499                           
   500                           	psect	intcode_body
   501  000100                     __pintcode_body:
   502                           	callstack 29
   503  000100                     int_func:
   504                           	callstack 29
   505  000100  0006               	pop		; remove dummy address from shadow register refresh
   506                           
   507                           ;src/main.c: 40:     if (INTCONbits.TMR0IF == 0x01) {
   508  000102  A4F2               	btfss	242,2,c	;volatile
   509  000104  D008               	goto	i2l28
   510                           
   511                           ;src/main.c: 44:       LATB = (PORTB ^ (1 << 0));;
   512  000106  5081               	movf	129,w,c	;volatile
   513  000108  0A01               	xorlw	1
   514  00010A  6E8A               	movwf	138,c	;volatile
   515                           
   516                           ;src/main.c: 45:       TMR0 = 0xE17B;
   517  00010C  0EE1               	movlw	225
   518  00010E  6ED7               	movwf	215,c	;volatile
   519  000110  0E7B               	movlw	123
   520  000112  6ED6               	movwf	214,c	;volatile
   521                           
   522                           ;src/main.c: 46:       INTCONbits.T0IF = 0x00;
   523  000114  94F2               	bcf	242,2,c	;volatile
   524  000116                     i2l28:
   525  000116  9201               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   526  000118  0011               	retfie		f
   527  00011A                     __end_of_TC0INT:
   528                           	callstack 0
   529  0000                     
   530                           	psect	param0
   531  0000                     
   532                           	psect	temp
   533  000001                     btemp:
   534                           	callstack 0
   535  000001                     	ds	1
   536  0000                     int$flags	set	btemp
   537  0000                     wtemp8	set	btemp+1
   538  0000                     ttemp5	set	btemp+1
   539  0000                     ttemp6	set	btemp+4
   540  0000                     ttemp7	set	btemp+8
   541                           
   542                           	psect	idloc
   543                           
   544                           ;Config register IDLOC0 @ 0x200000
   545                           ;	unspecified, using default values
   546  200000                     	org	2097152
   547  200000  FF                 	db	255
   548                           
   549                           ;Config register IDLOC1 @ 0x200001
   550                           ;	unspecified, using default values
   551  200001                     	org	2097153
   552  200001  FF                 	db	255
   553                           
   554                           ;Config register IDLOC2 @ 0x200002
   555                           ;	unspecified, using default values
   556  200002                     	org	2097154
   557  200002  FF                 	db	255
   558                           
   559                           ;Config register IDLOC3 @ 0x200003
   560                           ;	unspecified, using default values
   561  200003                     	org	2097155
   562  200003  FF                 	db	255
   563                           
   564                           ;Config register IDLOC4 @ 0x200004
   565                           ;	unspecified, using default values
   566  200004                     	org	2097156
   567  200004  FF                 	db	255
   568                           
   569                           ;Config register IDLOC5 @ 0x200005
   570                           ;	unspecified, using default values
   571  200005                     	org	2097157
   572  200005  FF                 	db	255
   573                           
   574                           ;Config register IDLOC6 @ 0x200006
   575                           ;	unspecified, using default values
   576  200006                     	org	2097158
   577  200006  FF                 	db	255
   578                           
   579                           ;Config register IDLOC7 @ 0x200007
   580                           ;	unspecified, using default values
   581  200007                     	org	2097159
   582  200007  FF                 	db	255
   583                           
   584                           	psect	config
   585                           
   586                           ; Padding undefined space
   587  300000                     	org	3145728
   588  300000  FF                 	db	255
   589                           
   590                           ;Config register CONFIG1H @ 0x300001
   591                           ;	Oscillator Selection bits
   592                           ;	OSC = HS, HS oscillator
   593                           ;	Fail-Safe Clock Monitor Enable bit
   594                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   595                           ;	Internal/External Oscillator Switchover bit
   596                           ;	IESO = OFF, Oscillator Switchover mode disabled
   597  300001                     	org	3145729
   598  300001  02                 	db	2
   599                           
   600                           ;Config register CONFIG2L @ 0x300002
   601                           ;	Power-up Timer Enable bit
   602                           ;	PWRT = OFF, PWRT disabled
   603                           ;	Brown-out Reset Enable bits
   604                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   605                           ;	Brown Out Reset Voltage bits
   606                           ;	BORV = 3, Minimum setting
   607  300002                     	org	3145730
   608  300002  1F                 	db	31
   609                           
   610                           ;Config register CONFIG2H @ 0x300003
   611                           ;	Watchdog Timer Enable bit
   612                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   613                           ;	Watchdog Timer Postscale Select bits
   614                           ;	WDTPS = 32768, 1:32768
   615  300003                     	org	3145731
   616  300003  1E                 	db	30
   617                           
   618                           ; Padding undefined space
   619  300004                     	org	3145732
   620  300004  FF                 	db	255
   621                           
   622                           ;Config register CONFIG3H @ 0x300005
   623                           ;	CCP2 MUX bit
   624                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   625                           ;	PORTB A/D Enable bit
   626                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   627                           ;	Low-Power Timer1 Oscillator Enable bit
   628                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   629                           ;	MCLR Pin Enable bit
   630                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   631  300005                     	org	3145733
   632  300005  81                 	db	129
   633                           
   634                           ;Config register CONFIG4L @ 0x300006
   635                           ;	Stack Full/Underflow Reset Enable bit
   636                           ;	STVREN = ON, Stack full/underflow will cause Reset
   637                           ;	Single-Supply ICSP Enable bit
   638                           ;	LVP = OFF, Single-Supply ICSP disabled
   639                           ;	Extended Instruction Set Enable bit
   640                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   641                           ;	Background Debugger Enable bit
   642                           ;	DEBUG = 0x1, unprogrammed default
   643  300006                     	org	3145734
   644  300006  81                 	db	129
   645                           
   646                           ; Padding undefined space
   647  300007                     	org	3145735
   648  300007  FF                 	db	255
   649                           
   650                           ;Config register CONFIG5L @ 0x300008
   651                           ;	Code Protection bit
   652                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   653                           ;	Code Protection bit
   654                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   655                           ;	Code Protection bit
   656                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   657                           ;	Code Protection bit
   658                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   659  300008                     	org	3145736
   660  300008  0F                 	db	15
   661                           
   662                           ;Config register CONFIG5H @ 0x300009
   663                           ;	Boot Block Code Protection bit
   664                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   665                           ;	Data EEPROM Code Protection bit
   666                           ;	CPD = OFF, Data EEPROM not code-protected
   667  300009                     	org	3145737
   668  300009  C0                 	db	192
   669                           
   670                           ;Config register CONFIG6L @ 0x30000A
   671                           ;	Write Protection bit
   672                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   673                           ;	Write Protection bit
   674                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   675                           ;	Write Protection bit
   676                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   677                           ;	Write Protection bit
   678                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   679  30000A                     	org	3145738
   680  30000A  0F                 	db	15
   681                           
   682                           ;Config register CONFIG6H @ 0x30000B
   683                           ;	Configuration Register Write Protection bit
   684                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   685                           ;	Boot Block Write Protection bit
   686                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   687                           ;	Data EEPROM Write Protection bit
   688                           ;	WRTD = OFF, Data EEPROM not write-protected
   689  30000B                     	org	3145739
   690  30000B  E0                 	db	224
   691                           
   692                           ;Config register CONFIG7L @ 0x30000C
   693                           ;	Table Read Protection bit
   694                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   695                           ;	Table Read Protection bit
   696                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   697                           ;	Table Read Protection bit
   698                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   699                           ;	Table Read Protection bit
   700                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   701  30000C                     	org	3145740
   702  30000C  0F                 	db	15
   703                           
   704                           ;Config register CONFIG7H @ 0x30000D
   705                           ;	Boot Block Table Read Protection bit
   706                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   707  30000D                     	org	3145741
   708  30000D  40                 	db	64
   709                           tosu	equ	0xFFF
   710                           tosh	equ	0xFFE
   711                           tosl	equ	0xFFD
   712                           stkptr	equ	0xFFC
   713                           pclatu	equ	0xFFB
   714                           pclath	equ	0xFFA
   715                           pcl	equ	0xFF9
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           prodh	equ	0xFF4
   721                           prodl	equ	0xFF3
   722                           indf0	equ	0xFEF
   723                           postinc0	equ	0xFEE
   724                           postdec0	equ	0xFED
   725                           preinc0	equ	0xFEC
   726                           plusw0	equ	0xFEB
   727                           fsr0h	equ	0xFEA
   728                           fsr0l	equ	0xFE9
   729                           wreg	equ	0xFE8
   730                           indf1	equ	0xFE7
   731                           postinc1	equ	0xFE6
   732                           postdec1	equ	0xFE5
   733                           preinc1	equ	0xFE4
   734                           plusw1	equ	0xFE3
   735                           fsr1h	equ	0xFE2
   736                           fsr1l	equ	0xFE1
   737                           bsr	equ	0xFE0
   738                           indf2	equ	0xFDF
   739                           postinc2	equ	0xFDE
   740                           postdec2	equ	0xFDD
   741                           preinc2	equ	0xFDC
   742                           plusw2	equ	0xFDB
   743                           fsr2h	equ	0xFDA
   744                           fsr2l	equ	0xFD9
   745                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       0
    BANK0           128      3      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Timer0_Config@timerConfig	PTR struct . size(2) Largest target is 5
		 -> timerConfig(BANK0[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TC0INT in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Timer0_Config

Critical Paths under _TC0INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TC0INT in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TC0INT in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TC0INT in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TC0INT in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TC0INT in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     164
                     _Display_Config
             _Interrupt_GlobalEnable
                      _Timer0_Config
 ---------------------------------------------------------------------------------
 (1) _Timer0_Config                                        3     1      2     164
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_GlobalEnable                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TC0INT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_Config
   _Interrupt_GlobalEnable
   _Timer0_Config

 _TC0INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      3      14       5       15.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      15        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 05 12:05:31 2021

                             l35 00FE                              l795 00A4  
                            wreg 000FE8   __end_of_Interrupt_GlobalEnable 0132  
                           _LATB 000F8A                             i2l28 0116  
                           _TMR0 000FD6                             _main 00E2  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0001                             start 000E  
                   ___param_bank 000000                            ?_main 0090  
                          _PORTB 000F81                            _TRISB 000F93  
                 _global_counter 0093                            tablat 000FF5  
          __end_of_Timer0_Config 00B4                            ttemp5 0002  
                          ttemp6 0005                            ttemp7 0009  
                          status 000FD8                            wtemp8 0002  
                __initialization 00B4                     __end_of_main 0100  
                         ??_main 0093                    __activetblptr 000003  
                         _TC0INT 0008                           isa$std 000001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                       __accesstop 0080  
        __end_of__initialization 00D8                    ___rparam_used 000000  
                   __pidataBANK0 011A                       __pbssBANK0 0093  
                        ?_TC0INT 0090                  __size_of_TC0INT 0112  
                        __Hparam 0000                          __Lparam 0000  
        __size_of_Display_Config 0006                          __pcinit 00B4  
                        __ramtop 0600                          __ptext0 00E2  
                        __ptext1 0012                          __ptext2 012A  
                        __ptext3 0132                        _T0CONbits 000FD5  
                 __pintcode_body 0100             end_of_initialization 00D8  
                        int_func 0100                          postdec1 000FE5  
                        postinc0 000FEE           __size_of_Timer0_Config 00A2  
       ??_Interrupt_GlobalEnable 0090                   __end_of_TC0INT 011A  
            start_initialization 00B4                         ??_TC0INT 0090  
       Timer0_Config@timerConfig 0090                    _Timer0_Config 0012  
                    __pdataBANK0 0080                   _Display_Config 0132  
__size_of_Interrupt_GlobalEnable 0008                    __pcstackBANK0 0090  
                 ?_Timer0_Config 0090           __end_of_Display_Config 0138  
                      __pintcode 0008           _Interrupt_GlobalEnable 012A  
                       _RCONbits 000FD0                  ?_Display_Config 0090  
                ??_Timer0_Config 0092                      _INTCON2bits 000FF1  
                      copy_data0 00C8                         __Hparam0 0000  
                       __Lparam0 0000                    __size_of_main 001E  
                       isa$xinst 000000                         int$flags 0001  
                     _INTCONbits 000FF2                         intlevel2 0000  
                    _timerConfig 008B                    _display_7_seg 0080  
        ?_Interrupt_GlobalEnable 0090                 ??_Display_Config 0090  
